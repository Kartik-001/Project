FOR price_predictor.py
------------------------------------------------------------------------------------
FOR model_selection:
-----------------------------------------------
X = df.drop('MEDV', axis=1)
y = df['MEDV']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
------------------------------------------------
train_set, test_set = train_test_split(df, test_size=0.2, random_state=42)
X_train, y_train = train_set.drop('MEDV', axis=1), train_set['MEDV']
X_test, y_test = test_set.drop('MEDV', axis=1), test_set['MEDV'] 
------------------------------------------------
from sklearn.model_selection import StratifiedShuffleSplit

stratified_splitter = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)
for train_index, test_index in stratified_splitter.split(df, df['CHAS']):
    train_set = df.loc[train_index]
    test_set = df.loc[test_index]
X_train, y_train = train_set.drop('MEDV', axis=1), train_set['MEDV']
X_test, y_test = test_set.drop('MEDV', axis=1), test_set['MEDV'] 
------------------------------------------------
from sklearn.model_selection import StratifiedShuffleSplit

X = df.drop('MEDV', axis=1)
y = df['MEDV']
stratified_splitter = StratifiedShuffleSplit(n_splits=5, test_size=0.2, random_state=42)
for train_index, test_index in stratified_splitter.split(df, df['CHAS']):
    X_train, X_test = X.iloc[train_index], X.iloc[test_index]
    y_train, y_test = y.iloc[train_index], y.iloc[test_index]
------------------------------------------------
from sklearn.model_selection import StratifiedKFold

X = df.drop('MEDV', axis=1)
y = df['MEDV']
stratified_kfold = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)
for train_index, test_index in stratified_kfold.split(X, y):
    X_train, X_test = X.iloc[train_index], X.iloc[test_index]
    y_train, y_test = y.iloc[train_index], y.iloc[test_index]
------------------------------------------------
